Collection: A collection is simply an object that represents a group of objects, known as its elements.
Collection Framework: It provides a set of interfaces and classees that help in managing groups of objects.

Before the introduction of the Collection Framework in JDK 1.2, Java used to rely on a variety of classes like
Vector, Stack, Hashtable, and arrays to store and manipulate groups of objects.

However, these classes had several drawbacks:

-> Inconsistency: Each class had a different way of managing collections, leading to confusion and a steep learning curve.
-> Lack of inter-operability: These classs were not designed to work together seamlessly.
-> No common interface: There was no common interface for all these classes, which meant
    you couldn't write generic algorithms that could operate on different types of collections.

To solve these problems, the Collection Framework was introduced.

-> Unified architecture: A consitent set of interfaces for all collections.
-> Inter-operability: Collections can be easily interchanged and manipulated in a uniform way.
-> Reusability: Generic algorithms can be written that work with any collection.
-> Efficiency: The framework provides efficient algorithms for basic operations like searching, sorting, and manipulation.