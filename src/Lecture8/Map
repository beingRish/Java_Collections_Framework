In Java, a Map is an object that maps keys to values.
It cannot contain duplicate keys, and each key can map to at most one value.
Think of it as a dictionary where you look up a word (key) to find its definition (value).
Map does not extend Collection interface.

Roll Number                 Name
101                         Alice Johnson
102                         Bob Smith
103                         Charlie Brown
104                         David Williams
105                         Eva Thompson

                                        Key Characteristics of the Map Interface
                                        ________________________________________
Key-Value Pairs:    Each entry in a Map consists of a key and a value.
Unique Keys:        No two entries can have the same key.
One Value per Key:  Each key maps to a single value.
Order:              Some implementations maintain insertion ordeer (LinkedHashMap), natural order (TreeMap), or no order (HashMap).

                                        Key Characteristics
                                        ___________________
Unordered: Does not maintain any order of its elements.
Allows null Keys and Values: Can have one null key and multiple null values.
Not Synchronized: Not thread-safe; requires external synchronization if used in a multi-threaded context.
Performance: Offers constant-time performance (O(1)) for basic operations like get and put, assuming the hash function disperses elements properly.

                                        Internal Structure of HashMap
                                        _____________________________
Basic Components of HashMap:
1. key: The identifier used to retrieve the value.
2. value: The data associated with the key.
3. Bucket: A place where key-value pairs are stored. Think of buckets are cells in a list (array).
4. Hash Function: Converts a key into an index (bucket location) for storage.

Hash Function:
A hash function is an algorithm that takes an input (or "key") and returns a fixed-size string of bytes, typically a numerical value.
The output is known as a hash code, hash value, or simply hash.
The primary purpose of a hash function is to map data of arbitrary size to data of fixed size.

Key Characteristics of Hash Function:
-> Deterministic: The same input will always produce the same output.
-> Fixed Output Size: Regardless of the input size, the hash code has a consistent size (e.g., 32-bit, 64-bit).
-> Efficient Computation: The hash function should compute the hash quickly.